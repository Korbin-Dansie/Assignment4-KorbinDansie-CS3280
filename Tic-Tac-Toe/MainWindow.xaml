<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tic_Tac_Toe" x:Name="Tic_Tac_Toe"
        x:Class="Tic_Tac_Toe.MainWindow"
        mc:Ignorable="d"
        Title="Tic Tac Toe" Height="450" Width="450" Icon="/tic-tac.256x256.png">
    <Window.Resources>
        <!-- Flat ComboBox https://gist.github.com/hansmaad/9187633-->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="{DynamicResource twoDark}" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="{DynamicResource twoLight}" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" >
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource twoLight}"/>
                    </Border.BorderBrush>
                </Border>
                <Border Grid.Column="1" Margin="1, 1, 1, 1" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" BorderBrush="#FF444444" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center"
            VerticalAlignment="Center" >
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource colorWhite}"/>
                    </Path.Fill>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource twoLight}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource twoLight}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource colorWhite}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource colorWhite}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource colorWhite}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource twoLight}"/>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource twoLight}"/>
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->

        <!--Style ComboBoxItem-->
        <Style x:Key="ComboBoxItemsFlatStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"  Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource twoLight}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource twoDark}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource twoMid}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End of Style ComboBoxItem-->

        <!-- Look into this tomorrow http://mark-dot-net.blogspot.com/2007/07/creating-custom-wpf-button-template-in.html-->
        <!--https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/walkthrough-create-a-button-by-using-xaml?view=netframeworkdesktop-4.8-->

        <!--Style Scoreboard buttons-->
        <Style x:Key="sytleScoreBoardButtons" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5,5,5,5"/>
            <Setter Property="MinHeight" Value="23" />
            <Setter Property="MinWidth" Value="75" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="myBorder" TextBlock.Foreground="{TemplateBinding Foreground}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource mainDark}"/>
                            </Border.Background>
                            <Viewbox Name="viewbox" TextBlock.Foreground="{TemplateBinding Foreground}">
                                <Label x:Name="label" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="72" TextBlock.Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter/>
                                </Label>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Border.Background" TargetName="myBorder">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource mainDarkTwo}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Style Scoreboard buttons-->

        <!--Style Control buttons-->
        <Style x:Key="styleControlsBtn" TargetType="{x:Type Button}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource colorWhite}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="myBorder" SnapsToDevicePixels="true">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource twoLight}"/>
                                </Border.Background>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15,1,15,1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Border.Background" TargetName="myBorder">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource twoMid}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Style Control buttons-->

        <!--Style matches lines-->
        <Style x:Key="matchesLineStyle" TargetType="{x:Type Path}">
            <Setter Property="Stroke" Value="Blue"/>
            <Setter Property="StrokeThickness" Value="4"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Visibility" Value="Hidden"/>
        </Style>
        <!--End of Style matches lines-->
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource mainColor}"/>
    </Window.Background>
    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="21*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="263*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="21*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <ComboBox x:Name="cbPlayMode" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1"  VerticalAlignment="Center" FontSize="18" Style="{Binding Mode=OneWay, Source={StaticResource ComboBoxFlatStyle}}" Width="99" SelectedIndex="0" DropDownClosed="cbPlayMode_Changed" Initialized="cbPlayMode_Initialized">
            <ComboBoxItem Content="1 Player " Style="{Binding Mode=OneWay, Source={StaticResource ComboBoxItemsFlatStyle}}" Tag="0"/>
            <ComboBoxItem Content="2 Players" Style="{Binding Mode=OneWay, Source={StaticResource ComboBoxItemsFlatStyle}}" Tag="1"/>
        </ComboBox>
        <Grid x:Name="gScoreBoard" Grid.Row="2" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="borderX" BorderBrush="Black"
                BorderThickness="2" Margin="0,10,10,10" CornerRadius="5,5,5,5">
                <Grid x:Name="gX">
                    <Label x:Name="lbX" Content="X" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="18">
                        <Label.Foreground>
                            <SolidColorBrush Color="{DynamicResource oneLight}"/>
                        </Label.Foreground>
                    </Label>
                    <Label x:Name="lbXScore" Content="-" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" FontSize="18"/>
                </Grid>
            </Border>
            <Border x:Name="borderO" BorderBrush="Black"
                BorderThickness="2" Margin="0,10,10,10" Grid.Column="1" CornerRadius="5,5,5,5">
                <Grid x:Name="gO">
                    <Label x:Name="lbO" Content="O" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="18">
                        <Label.Foreground>
                            <SolidColorBrush Color="{DynamicResource circleBlue}"/>
                        </Label.Foreground>
                    </Label>
                    <Label x:Name="lbOScore" Content="-" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" FontSize="18"/>
                </Grid>
            </Border>
            <Border x:Name="borderTie" BorderBrush="Black"
                BorderThickness="2" Margin="0,10,10,10" Grid.Column="2" CornerRadius="5,5,5,5">
                <Grid x:Name="gTie">
                    <Label x:Name="lbTie" Content="Tie" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="18"/>
                    <Label x:Name="lbTieScore" Content="-" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" FontSize="18"/>
                </Grid>
            </Border>
        </Grid>
        <Grid Name="scoardBoardBackground" Grid.Row="3" Grid.Column="1">
            <Grid.Background>
                <RadialGradientBrush>
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="Black" Offset="0"/>
                </RadialGradientBrush>
            </Grid.Background>
            <Grid x:Name="gBoard" Grid.Column="1" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="4*"/>
                </Grid.RowDefinitions>
                <Button x:Name="btnTopLeft" Content="" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="0,0,5,5" Click="PlayerMoveClick" Tag="0">
                </Button>
                <Button x:Name="btnTopMid" Grid.Column="1" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="5,0,5,5" Click="PlayerMoveClick" Tag="1">
                </Button>
                <Button x:Name="btnTopRight"  Grid.Column="2" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="5,0,0,5" Click="PlayerMoveClick" Tag="2">
                </Button>
                <Button x:Name="btnMidLeft"  Grid.Row="1" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="0,5,5,5" Click="PlayerMoveClick" Tag="3">
                </Button>
                <Button x:Name="btnMidMid"  Grid.Row="1" Grid.Column="1" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Click="PlayerMoveClick" Tag="4">
                </Button>
                <Button x:Name="btnMidRight"  Grid.Row="1" Grid.Column="2" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="5,5,0,5" Click="PlayerMoveClick" Tag="5">
                </Button>
                <Button x:Name="btnBotLeft"  Grid.Row="2" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="0,5,5,0" Click="PlayerMoveClick" Tag="6">
                </Button>
                <Button x:Name="btnBotMid"  Grid.Row="2" Grid.Column="1" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="5,5,5,0" Click="PlayerMoveClick" Tag="7">

                </Button>
                <Button x:Name="btnBotRight" Content="" Grid.Row="2" Grid.Column="2" Style="{Binding Mode=OneWay, Source={StaticResource sytleScoreBoardButtons}}" Margin="5,5,0,0" Click="PlayerMoveClick" Tag="8">
                </Button>
            </Grid>
        </Grid>
        <Grid x:Name="gMatches" Grid.Column="1" Grid.Row="3">
            <Grid.ColumnDefinitions>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
            </Grid.RowDefinitions>
            <Grid x:Name="gMatchesRows" Margin="15,0,15,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Path x:Name="pRow1" Grid.Column="0" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="1,0" />
                    </Path.Data>
                </Path>
                <Path x:Name="pRow2" Grid.Column="0" Grid.Row="1" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="1,0"/>
                    </Path.Data>
                </Path>
                <Path x:Name="pRow3" Grid.Column="0" Grid.Row="2" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="1,0" />
                    </Path.Data>
                </Path>
            </Grid>
            <Grid x:Name="gMatchesColumns" Margin="0,15,0,15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Path x:Name="pCol1" Grid.Column="0" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="0,1" />
                    </Path.Data>
                </Path>
                <Path x:Name="pCol2" Grid.Column="1" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="0,1" />
                    </Path.Data>
                </Path>
                <Path x:Name="pCol3" Grid.Column="2" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="0,1" />
                    </Path.Data>
                </Path>
            </Grid>
            <Grid x:Name="gMatchesDiagonal" Margin="15,15,15,15">
                <Path x:Name="pDia1" Grid.Column="0" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,0" EndPoint="1,1" />
                    </Path.Data>
                </Path>
                <Path x:Name="pDia2" Grid.Column="0" Style="{Binding Mode=OneWay, Source={StaticResource matchesLineStyle}}">
                    <Path.Data>
                        <LineGeometry StartPoint="0,2" EndPoint="1,1" />
                    </Path.Data>
                </Path>
            </Grid>
        </Grid>
        <Grid x:Name="GameStatus" Grid.Row="3" Grid.Column="1">
            <Viewbox>
                <Label x:Name="lbPlayer1Wins" Content="Player 1 Wins" Background="#BFFFFFFF" Margin="15,0,15,0" Visibility="Hidden">
                    <Label.Foreground>
                        <SolidColorBrush Color="Black"/>
                    </Label.Foreground>
                </Label>
            </Viewbox>
            <Viewbox>
                <Label x:Name="lbPlayer2Wins" Content="Player 2 Wins" Background="#BFFFFFFF" Margin="15,0,15,0" Visibility="Hidden">
                    <Label.Foreground>
                        <SolidColorBrush Color="Black"/>
                    </Label.Foreground>
                </Label>
            </Viewbox>
            <Viewbox>
                <Label x:Name="lbItsATie" Content="Its a Tie" Background="#BFFFFFFF" Margin="15,0,15,0" Visibility="Hidden">
                    <Label.Foreground>
                        <SolidColorBrush Color="Black"/>
                    </Label.Foreground>
                </Label>
            </Viewbox>
            <Viewbox>
                <Label x:Name="lbClickStartToBegin" Content="Click Start Game to begin" Background="#BFFFFFFF" Margin="15,0,15,0">
                    <Label.Foreground>
                        <SolidColorBrush Color="Black"/>
                    </Label.Foreground>
                </Label>
            </Viewbox>
        </Grid>
        <Grid x:Name="gContorls" Grid.Column="1" Grid.Row="4" Height="42" VerticalAlignment="Bottom">

            <Button x:Name="btnRestart" Grid.Column="1" Content="Restart" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="25,1,25,1" FontSize="18" Style="{Binding Mode=OneWay, Source={StaticResource styleControlsBtn}}" Click="btnRestart_Click"/>
        </Grid>
        <Button x:Name="btnStartgame" Grid.Column="1" Content="Start Game" HorizontalAlignment="Center" Style="{Binding Mode=OneWay, Source={StaticResource styleControlsBtn}}" Grid.Row="1" FontSize="18" Click="btnStartgame_Click"/>
    </Grid>
</Window>
